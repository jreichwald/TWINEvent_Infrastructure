@proto = http
@hostname = 141.19.44.65 
@user = ditto
@honodevice = my-auth-id-1
@dittodevice = org.fournier:aircraft
@honotenant = joel
@honodevicepwd = flugzeug
@pwd = ditto
@port = 38080 
@httpadapterport = 18080
@devregport = 28080
@dittoport = 38080
@dittodevopsusr = devops
@dittodevopspwd = foobar

########################################################################################
### SETUP A COMMON POLICY ##############################################################
########################################################################################

### CURL ###############################################################################

curl -i -X PUT -u ditto:ditto -H 'Content-Type: application/json' --data '{
  "entries": {
    "DEFAULT": {
      "subjects": {
        "{{ request:subjectId }}": {
           "type": "Ditto user authenticated via nginx"
        }
      },
      "resources": {
        "thing:/": {
          "grant": ["READ", "WRITE"],
          "revoke": []
        },
        "policy:/": {
          "grant": ["READ", "WRITE"],
          "revoke": []
        },
        "message:/": {
          "grant": ["READ", "WRITE"],
          "revoke": []
        }
      }
    },
    "HONO": {
      "subjects": {
        "pre-authenticated:hono-connection": {
          "type": "Connection to Eclipse Hono"
        }
      },
      "resources": {
        "thing:/": {
          "grant": ["READ", "WRITE"],
          "revoke": []
        },
        "message:/": {
          "grant": ["READ", "WRITE"],
          "revoke": []
        }
      }
    }
  }
}' http://{{hostname}}:{{dittoport}}/api/2/policies/test:testdevice

########################################################################################
### DELETE THE TWIN ####################################################################
########################################################################################

DELETE {{proto}}://{{hostname}}:{{dittoport}}/api/2/things/test:testdevice
Authorization: Basic ditto:ditto

########################################################################################
### CREATE THE TWIN ####################################################################
########################################################################################

### CURL ###############################################################################

curl -X PUT -u ditto:ditto -H 'Content-Type: application/json' --data '{
  "policyId": "test:testdevice",
  "attributes": {
    "location": "Germany"
  },
  "features": {
    "temperature": {
      "properties": {
        "value": null
      }
    },
    "humidity": {
      "properties": {
        "value": null
      }
    }
  }
}' {{proto}}://{{hostname}}:{{dittoport}}/api/2/things/test:testdevice


########################################################################################
### PUBLISH TELEMETRY TO HONO ##########################################################
### Device and Tenant have to be provisioned previously ################################
########################################################################################

POST {{proto}}://{{hostname}}:{{httpadapterport}}/telemetry
Content-Type: application/json
Authorization: Basic testdevice@test:test

{
  "topic": "test/testdevice/things/twin/commands/modify",
  "headers": {},
  "path": "/features/temperature/properties/value",
  "value": 999
}


########################################################################################
### PUBLISH TELEMETRY TO HONO ##########################################################
### Device and Tenant have to be provisioned previously ################################
########################################################################################

POST {{proto}}://{{hostname}}:{{httpadapterport}}/telemetry
Content-Type: application/json
Authorization: Basic demo-device@org.eclipse.packages.c2e:demo-secret

{
  "topic": "org.eclipse.packages.c2e/demo-device/things/twin/commands/modify",
  "headers": {},
  "path": "/features/humidity/properties/value",
  "value": 999
}

########################################################################################
########################################################################################
### HONO STUFF #########################################################################
########################################################################################
########################################################################################

########################################################################################
### PUBLISH TELEMETRY TO HONO ##########################################################
### Device and Tenant have to be provisioned previously ################################
########################################################################################

POST {{proto}}://{{hostname}}:{{httpadapterport}}/telemetry
Content-Type: application/json
Authorization: Basic {{honodevice}}@{{honotenant}}:{{honodevicepwd}}

{
  "topic": "{{honotenant}}/{{honodevice}}/things/twin/commands/modify",
  "headers": {},
  "path": "/features/altitude/properties/value",
  "value": "666"
}

### CURL ###############################################################################

curl -X POST -u {{honodevice}}@{{honotenant}}:{{honodevicepwd}}
--data-binary '{
  "topic": "joel/org.fournier:aircraft/things/twin/commands/modify",
  "headers": {},
  "path": "/features/altitude/properties/value",
  "value": 2000
}' {{proto}}://{{hostname}}:{{httpadapterport}}/telemetry

### test

curl -u my-auth-id-1@{{honotenant}}:{{honodevicepwd}} -H 'Content-Type: application/json' --data-binary '{"altitude": 5}' http://141.19.44.65:18080/telemetry

########################################################################################
########################################################################################
### DITTO STUFF ########################################################################
########################################################################################
########################################################################################

########################################################################################
### GET BACK DITTO VALUES ##############################################################
########################################################################################

GET {{proto}}://{{hostname}}:{{dittoport}}/api/2/things/{{dittodevice}}
Authorization: Basic ditto:ditto

### CURL ###############################################################################

curl -u ditto:ditto -w '\n' {{proto}}://{{hostname}}:{{dittoport}}/api/2/things/{{dittodevice}}

########################################################################################
### CREATE A POLICY ####################################################################
########################################################################################
PUT {{proto}}://{{user}}:{{pwd}}@{{hostname}}:{{port}}/api/2/policies/test:policy 
Content-Type: application/json

{
      "entries": {
        "owner": {
            "subjects": {
                "nginx:ditto": {
                    "type": "nginx basic auth user"
                }
            },
            "resources": {
                "thing:/": {
                    "grant": [
                        "READ","WRITE"
                    ],
                    "revoke": []
                },
                "policy:/": {
                    "grant": [
                        "READ","WRITE"
                    ],
                    "revoke": []
                },
                "message:/": {
                    "grant": [
                        "READ","WRITE"
                    ],
                    "revoke": []
                }
            }
        }
    }
}

### Create a Demo Device

PUT {{proto}}://{{user}}:{{pwd}}@{{hostname}}:{{port}}/api/2/things/test:esp32
Content-Type: application/json

{
    "policyId": "test:policy",
    "attributes": {
        "name": "esp32",
        "type": "esp32 DevKit C"
    },
    "features": {
        "temp_sensor": {
            "properties": {
                "type" : "DHT11",
                "value": 32
            }
        }
    }
}

### GET ESP32 Info 
GET {{proto}}://{{user}}:{{pwd}}@{{hostname}}:{{port}}/api/2/things/test:esp32


### Create MQTT Connection 
POST http://devops:foobar@{{hostname}}:38443/devops/piggyback/connectivity?timeout=10 
Content-Type: application/json

{
    "targetActorSelection": "/system/sharding/connection",
    "headers": {
    	"aggregate": false
    },
    "piggybackCommand": {
        "type": "connectivity.commands:createConnection",
        "connection": {
            "id": "mqtt-example-connection",
            "connectionType": "mqtt",
            "connectionStatus": "open",
            "failoverEnabled": true,
            "uri": "tcp://dbt:dbt@mq.jreichwald.de:1883",
            "sources": [{
                "addresses": ["ditto-tutorial/#"],
                "authorizationContext": ["nginx:ditto"],
                "qos": 0,
                "filters": []
            }],
            "targets": [{
                "address": "ditto-tutorial/{{ thing:id }}",
                "topics": [
                "_/_/things/twin/events",
                "_/_/things/live/messages"
                ],
                "authorizationContext": ["nginx:ditto"],
                "qos": 0
            }]
        }
    }
}


### DELETE MQTT Connection
POST http://devops:foobar@{{hostname}}:38443/devops/piggyback/connectivity?timeout=10 
Content-Type: application/json

{
  "targetActorSelection": "/system/sharding/connection",
  "headers": {
    "aggregate": false
  },
  "piggybackCommand": {
    "type": "connectivity.commands:deleteConnection",
    "connectionId": "mqtt-example-connection"
  }
}


### DELETE esp32 Thing
DELETE {{proto}}://{{user}}:{{pwd}}@{{hostname}}:{{port}}/api/2/things/test:esp32
Content-Type: application/json

### GET STH

POST https://192.168.2.109:1880/test
Content-Type: application/json

{
  "targetActorSelection": "/system/sharding/connection",
  "headers": {
    "aggregate": false
  },
  "piggybackCommand": {
    "type": "connectivity.commands:deleteConnection",
    "connectionId": "mqtt-example-connection"
  }
}

### GET STH

curl -X POST https://reqbin.com/echo/post/json -H "Content-Type: application/json" --data-binary @- <<DATA
{
  "Id": 12345,
  "Customer": "John Smith",
  "Quantity": 1,
  "Price": 10.00
}
DATA